"75+"
)
people_by_age <- data %>%
group_by(Age_16groups) %>%
summarise(n = n()) %>%
mutate(Age_16groups = factor(Age_16groups, levels = 1:16, labels = age_groups)) %>%
rename(
age_group = Age_16groups,
population = n
)
people_by_age
ggplot(people_by_age, aes(x = age_groups, y = population)) +
geom_col(fill = "plum3") +
theme_minimal() +
labs(
title = "Population by Age Group",
x = "Age Group",
y = "Population"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
educational_levels <- c("Illiterate", "No primary", "Primary", "Basic", "Secondary / high",
"Vocational", "Secondary specialized", "Bachelor's degree",
"Master's degree", "Certified specialist",
"Post-graduate (Ph.D, doctorate)")
people_by_education <- data %>%
group_by(B7) %>%
summarise(n = n()) %>%
mutate(B7 = factor(B7, levels = 1:11, labels = educational_levels)) %>%
rename(
educational_level = B7,
population = n
)
people_by_education
ggplot(people_by_education, aes(x = educational_level, y = population)) +
geom_col(fill = "plum3") +
theme_minimal() +
labs(
title = "Population by Educational Level",
x = "Educational Level",
y = "Population"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
nace_sectors <- c(
"Agriculture, Forestry and Fishing",
"Mining and Quarrying",
"Manufacturing",
"Electricity, Gas, Steam and Air Conditioning Supply",
"Water Supply; Sewerage, Waste Management and Remediation Activities",
"Construction",
"Wholesale and Retail Trade; Repair of Motor Vehicles and Motorcycles",
"Transportation and Storage",
"Accommodation and Food Service Activities",
"Publishing, Broadcasting, and Content Production and Distribution Activities",
"Telecommunication, Computer Programming, Consulting, Computing Infrastructure, and other Information Service Activities",
"Financial and Insurance Activities",
"Real Estate Activities",
"Professional, Scientific and Technical Activities",
"Administrative and Support Service Activities",
"Public Administration and Defence; Compulsory Social Security",
"Education",
"Human Health and Social Work Activities",
"Arts, Sports and Recreation",
"Other Service Activities",
"Activities of Households as Employers; Undifferentiated Goods and Services Producing Activities of Households for Own Use"
)
employees_by_industry <- data %>%
group_by(E4_21groups_NACE_rev_2.2) %>%
summarise(n = n()) %>%
mutate(E4_21groups_NACE_rev_2.2 = factor(E4_21groups_NACE_rev_2.2, levels = 1:21, labels = nace_sectors)) %>%
rename(
industry = E4_21groups_NACE_rev_2.2,
employee_number = n
)
employees_by_industry
exact_salary_data_points <- data %>%
select(E14_1) %>%
na.omit() %>%
summarise(n = n())
exact_salary_data_points
exact_salary_desc <- data %>%
select(E14_1) %>%
na.omit() %>%
summarise(mean = mean(E14_1), max = max(E14_1), min = min(E14_1), median = median(E14_1))
exact_salary_desc
mean_salary_by_gender <- data %>%
select(E14_1, B3) %>%
mutate(B3 = factor(B3, levels = 1:2, labels = c("Male", "Female"))) %>%
na.omit() %>%
group_by(B3) %>%
summarise(mean = mean(E14_1), median = median(E14_1), min = min(E14_1), max = max(E14_1))
mean_salary_by_gender
salary_data <- data %>%
select(salary = E14_1, gender_code = B3) %>%
mutate(
gender = factor(gender_code, levels = c(1, 2), labels = c("Male", "Female"))
) %>%
filter(!is.na(salary), !is.na(gender))
ggplot(salary_data, aes(x = gender, y = salary, fill = gender)) +
geom_boxplot(outlier.shape = NA) +
coord_cartesian(ylim = c(0, 500000)) +
theme_minimal() +
scale_fill_manual(values = c("Male" = "#56B4E9", "Female" = "#E78AC3")) +
labs(
title = "Salary Distribution by Gender",
x = "Gender",
y = "Salary"
) +
theme(legend.position = "none")
income_ranges <- c(
"Up to 55 000 AMD",
"55 000 AMD",
"55 001 - 110 000 AMD",
"110 001 - 220 000 AMD",
"220 001 - 440 000 AMD",
"440 001 - 600 000 AMD",
"600 001 - 700 000 AMD",
"Refused to answer",
"Do not know / difficult to answer"
)
empty_rows <- which(rowSums(is.na(df)) == ncol(df))
empty_rows <- which(rowSums(is.na(df)) == ncol(df))
ggplot(categorical_salary_frequency, aes(x = income_range, y = frequency)) +
geom_col(fill = "plum3") +
theme_minimal() +
labs(
title = "Salary Histogram",
x = "Income Ranges",
y = "Frequency"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
empty_rows <- which(rowSums(is.na(df)) == ncol(df))
cols_to_work <- data[, c('A3', 'A5', 'A6_Month', 'A6_Year', 'B3', 'Age_16groups', 'B7', 'B8',
'B8_Year', 'B9', 'B10', 'B11', 'C1', 'C9', 'C4', 'C3', 'D1', 'D2', 'D3', 'E2_9group',
'E4_21groups_NACE_rev_2.2', 'E5', 'E6', 'E7', 'E9', 'E10', 'E13', 'E14_1', 'E14_2', 'E15', 'E16',
'E17', 'E19', 'E23', 'E24', 'F1', 'F2_9group', 'F3_21groups_NACE_rev_2.2', 'F4', 'F5',
'F6', 'F8_1', 'F8_2', 'G2_1', 'G2_2', 'G2_3Total', 'G3', 'J1_4group', 'J3_1', 'J3_2', 'J3_LastJob')]
missing_per_row <- rowSums(is.na(cols_to_work))
total_cols <- length(cols_to_work)
exceeds <- which(missing_per_row > 0.5 * total_cols)
good_rows <-length(exceeds)
print(good_rows)
sum(apply(data, 1, function(row) all(is.na(row))))
cols_to_check <- c('A3', 'A5', 'A6_Month', 'A6_Year', 'B3', 'Age_16groups', 'B7', 'B8',
'B8_Year', 'B9', 'B10', 'B11', 'C1', 'C9', 'C4', 'C3', 'D1', 'D2', 'D3', 'E2_9group',
'E4_21groups_NACE_rev_2.2', 'E5', 'E6', 'E7', 'E9', 'E10', 'E13', 'E14_1', 'E14_2', 'E15', 'E16',
'E17', 'E19', 'E23', 'E24', 'F1', 'F2_9group', 'F3_21groups_NACE_rev_2.2', 'F4', 'F5',
'F6', 'F8_1', 'F8_2', 'G2_1', 'G2_2', 'G2_3Total', 'G3', 'J1_4group', 'J3_1', 'J3_2', 'J3_LastJob')
sum(rowSums(is.na(data[cols_to_check])) > 0)
sort(colSums(is.na(data)), decreasing = TRUE)
sort(colSums(is.na(data[cols_to_check])), decreasing = TRUE)
most_important <- c("A3", "A5", "B3", "B7", "E4_21groups_NACE_rev_2.2", "E14_1")
sort(colSums(is.na(data[most_important])), decreasing = TRUE)
data %>%
filter(!is.na(E4_21groups_NACE_rev_2.2) | !is.na(E14_1))
data$E14_2
sum(is.na(data$E14_2))
sum(!is.na(data$E14_2))
data %>%
filter(!is.na(E14_2))
data %>%
filter(!is.na(E14_2)) %>%
select(E14_2)
data %>%
filter(!is.na(E14_2)) %>%
select(E14_2) %>%
summarise(mode = mode())
data %>%
filter(!is.na(E14_2)) %>%
select(E14_2) %>%
summarise(mode = mode(E14_2))
data %>%
filter(!is.na(E14_2)) %>%
select(E14_2) %>%
summarise(mode = mode())
data %>%
filter(!is.na(E14_2)) %>%
select(E14_2) %>%
summarise(mode = get_mode(E14_2))
uniqx[which.max(tabulate(match(x, uniqx)))]
get_mode <- function(x) {
uniqx <- unique(x)
uniqx[which.max(tabulate(match(x, uniqx)))]
}
data %>%
filter(!is.na(E14_2)) %>%
select(E14_2) %>%
summarise(mode = get_mode(E14_2))
data %>%
filter(!is.na(E14_2)) %>%
count(E14_2, sort = TRUE)
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
data <- read_excel("data.xlsx", sheet = "LFS_Year_2023")
most_important <- c("A3", "A5", "B3", "B7", "E4_21groups_NACE_rev_2.2", "E14_1")
labels <- c("Marz", "Urban/Rural", "Sex", "Educational Level", "Industry", "Income (Numerical)", "Income (Categorical)")
sort(colSums(is.na(data[most_important])), decreasing = TRUE)
missing_value_count <- data %>%
select(most_important)
missing_value_count <- data %>%
select(all_of(most_important)) %>%
summarise(across(everything(), ~sum(is.na(.)))) %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "missing") %>%
mutate(label = labels)
missing_value_count <- data %>%
select(all_of(most_important)) %>%
summarise(across(everything(), ~sum(is.na(.)))) %>%
mutate(label = labels)
missing_value_count <- data %>%
select(all_of(most_important)) %>%
summarise(across(everything(), ~sum(is.na(.))))
missing_value_count <- data %>%
select(all_of(most_important)) %>%
summarise(across(everything(), ~sum(is.na(.))))
missing_value_count
?pivot_longer
cleaned_data <- data %>%
filter(!is.na(E4_21groups_NACE_rev_2.2) | !is.na(E14_1))
cleaned_data <- data %>%
filter(!is.na(E4_21groups_NACE_rev_2.2) | !is.na(E14_1))
cleaned_data
missing_table <- data %>%
select(all_of(most_important)) %>%
summarise(across(everything(), ~sum(is.na(.)))) %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "missing") %>%
mutate(label = labels)
missing_table <- data %>%
select(all_of(most_important)) %>%
summarise(across(everything(), ~sum(is.na(.)))
missing_value_count
missing_table <- data %>%
select(all_of(most_important)) %>%
summarise(across(everything(), ~sum(is.na(.))))
missing_value_count
most_important <- c("A3", "A5", "B3", "B7", "E4_21groups_NACE_rev_2.2", "E14_1", "E15")
labels <- c("Marz", "Urban/Rural", "Sex", "Educational Level", "Industry", "Income (Numerical)", "Income (Categorical)")
sort(colSums(is.na(data[most_important])), decreasing = TRUE)
missing_table <- data %>%
select(all_of(most_important)) %>%
summarise(across(everything(), ~sum(is.na(.))))
missing_value_count
most_important <- c("A3", "A5", "B3", "B7", "E4_21groups_NACE_rev_2.2", "E14_1", "E15")
labels <- c("Marz", "Urban/Rural", "Sex", "Educational Level", "Industry", "Income (Numerical)", "Income (Categorical)")
sort(colSums(is.na(data[most_important])), decreasing = TRUE)
missing_table <- data %>%
select(all_of(most_important)) %>%
summarise(across(everything(), ~sum(is.na(.))))
missing_value_count
missing_table <- data %>%
select(A3, A5, B3, B7, E4_21groups_NACE_rev_2.2, E14_1, E15) %>%
summarise(across(everything(), ~sum(is.na(.)))) %>%
mutate(label = labels)
missing_table <- data %>%
select(A3, A5, B3, B7, E4_21groups_NACE_rev_2.2, E14_1, E15) %>%
summarise(across(everything(), ~sum(is.na(.))))
missing_value_count
missing_table <- data %>%
select(A3, A5, B3, B7, E4_21groups_NACE_rev_2.2, E14_1, E15) %>%
summarise(sum(is.na(.)))
missing_value_count
missing_table <- data %>%
select(E15) %>%
summarise(sum(is.na(.)))
missing_value_count
missing_table <- data %>%
select(E15) %>%
<<<<<<< Updated upstream
summarise(sum(is.na(.)))
missing_value_count
View(missing_value_count)
missing_table <- data %>%
select(A3, A5, B3, B7, E4_21groups_NACE_rev_2.2, E14_1, E15) %>%
summarise(across(everything(), ~sum(is.na(.)))) %>%
mutate(label = labels)
missing_table <- data %>%
select(A3, A5, B3, B7, E4_21groups_NACE_rev_2.2, E14_1, E15) %>%
summarise(across(everything(), ~sum(is.na(.))))
missing_table
missing_value_count <- data %>%
select(A3, A5, B3, B7, E4_21groups_NACE_rev_2.2, E14_1, E15) %>%
summarise(across(everything(), ~sum(is.na(.))))
missing_value_count
sort(colSums(is.na(data[most_important])), decreasing = TRUE)
most_important <- c("A3", "A5", "B3", "B7", "E4_21groups_NACE_rev_2.2", "E14_1", "E15")
labels <- c("Marz", "Urban/Rural", "Sex", "Educational Level", "Industry", "Income (Numerical)", "Income (Categorical)")
missing_value_count <- data %>%
select(A3, A5, B3, B7, E4_21groups_NACE_rev_2.2, E14_1, E15) %>%
summarise(across(everything(), ~sum(is.na(.))))
missing_value_count
cleaned_data <- data %>%
filter(!is.na(E14_1) | !is.na(E15))
cleaned_data
=======
na.omit() %>%
summarise(number_of_data_points = n())
categorical_salary_data_points
categorical_salary_frequency <- data %>%
group_by(E15) %>%
summarise(n = n()) %>%
na.omit() %>%
mutate(E15 = factor(E15, levels = 1:9, labels = income_ranges)) %>%
rename(
income_range = E15,
frequency = n
)
categorical_salary_frequency
ggplot(categorical_salary_frequency, aes(x = income_range, y = frequency)) +
geom_col(fill = "plum3") +
theme_minimal() +
labs(
title = "Salary Histogram",
x = "Income Ranges",
y = "Frequency"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
load("C:/Users/User/Desktop/Sophomore/semester 2/statistics/project material/R codes/stats-project/.RData")
load("C:/Users/User/Desktop/Sophomore/semester 2/statistics/project material/R codes/stats-project/.RData")
>>>>>>> Stashed changes
# not null values
gender_graduation_count <- decoded_data %>%
filter(!is.na(B8)) %>%
nrow()
# not null values
gender_graduation_count <- decoded_data %>%
filter(!is.na(E14_1)) %>%
nrow()
gender_graduation_count <- decoded_data %>%
filter(!is.na(E14_1)) %>%
nrow()
library(readxl)
library(dplyr)
library(ggplot2)
library(knitr)
library(tidyr)
# not null values
gender_graduation_count <- decoded_data %>%
filter(!is.na(E14_1)) %>%
nrow()
cleaned_data <- read_excel("C:/Users/User/Desktop/Sophomore/semester 2/statistics/project material/R codes/stats-project/cleaned_data.xlsx")
decoded_data <- cleaned_data %>%
mutate(
B3 = case_when(
B3 == 1 ~ "Male",
B3 == 2 ~ "Female",
TRUE ~ NA_character_
)
) %>%
mutate(
Age_16groups = case_when(
Age_16groups == 1 ~ "0-4",
Age_16groups == 2 ~ "5-9",
Age_16groups == 3 ~ "10-14",
Age_16groups == 4 ~ "15-19",
Age_16groups == 5 ~ "20-24",
Age_16groups == 6 ~ "25-29",
Age_16groups == 7 ~ "30-34",
Age_16groups == 8 ~ "35-39",
Age_16groups == 9 ~ "40-44",
Age_16groups == 10 ~ "45-49",
Age_16groups == 11 ~ "50-54",
Age_16groups == 12 ~ "55-59",
Age_16groups == 13 ~ "60-64",
Age_16groups == 14 ~ "65-69",
Age_16groups == 15 ~ "70-74",
Age_16groups == 16 ~ "75+",
TRUE ~ NA_character_
)
) %>%
mutate(
E15 = case_when(
E15 == 1 ~ "Up to 55 000 AMD",
E15 == 2 ~ "55 000 AMD",
E15 == 3 ~ "55 001 -  110 000 AMD",
E15 == 4 ~ "110 001 - 220 000 AMD",
E15 == 5 ~ "220 001 - 440 000 AMD",
E15 == 6 ~ "440 001 - 600 000 AMD",
E15 == 7 ~ "600 001 - 700 000 AMD",
E15 == 8 ~ "Refused to answer",
E15 == 9 ~ "Do not know / difficult to answer",
TRUE ~ NA_character_
)
)
decoded_data <- decoded_data%>%
mutate(
B8 = case_when(
B8 == 1 ~ "Up tp 2000",
B8 == 2 ~ "2001-2005",
B8 == 3 ~ "2006-2010",
B8 == 4 ~ "Since 2012"
)
)
correct_order <- c("Up tp 2000", "2001-2005", "2006-2010", "Since 2012")
plot_data <- decoded_data %>%
mutate(
graduation_year_ordered = factor(
B8,
levels = correct_order,
ordered = TRUE
)
) %>%
filter(!is.na(E14_1)) %>%
group_by(graduation_year_ordered, B3) %>%  # Group by the ordered factor
summarize(
mean_salary = mean(E14_1),
se = sd(E14_1) / sqrt(n()),
lower_ci = mean_salary - 1.96 * se,
upper_ci = mean_salary + 1.96 * se,
.groups = "drop"  # Explicitly drop grouping
) %>%
mutate(salary_label = paste0(format(round(mean_salary), big.mark = ","), " AMD"))
ggplot(plot_data, aes(x = graduation_year_ordered, y = mean_salary,
color = B3, group = B3)) +
geom_pointrange(aes(ymin = lower_ci, ymax = upper_ci),
position = position_dodge(width = 0.5)) +
geom_line(position = position_dodge(width = 0.5)) +
geom_text(aes(y = upper_ci, label = salary_label),
position = position_dodge(width = 0.5),
vjust = -0.5, size = 3, color = "black") +
labs(title = "Mean Salary with 95% Confidence Intervals",
x = "Graduation Year", y = "Mean Salary (AMD)",
color = "Gender") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# not null values
gender_graduation_count <- decoded_data %>%
filter(!is.na(E14_1)) %>%
nrow()
graduation_count <- decoded_data %>%
filter(!is.na(B8)) %>%
count(B3, name = "count")
# percentages
graduation_percentage <- decoded_data %>%
filter(!is.na(E14_1)) %>%
count(B3, name = "count") %>%
mutate(percent = count / sum(count) * 100)
print(graduation_percentage)
grad_year_gender_count <- decoded_data %>%
filter(!is.na(B8), !is.na(B3)) %>%
count(B8, B3, name = "count") %>%
arrange(B8)
print(grad_year_gender_count)
grad_year_gender_count <- decoded_data %>%
filter(!is.na(B8), !is.na(B3)) %>%
count(B8, B3, name = "count") %>%
arrange(correct_order)
correct_order <- c("Up tp 2000", "2001-2005", "2006-2010", "Since 2012")
plot_data <- decoded_data %>%
mutate(
graduation_year_ordered = factor(
B8,
levels = correct_order,
ordered = TRUE
)
) %>%
filter(!is.na(E14_1)) %>%
group_by(graduation_year_ordered, B3) %>%  # Group by the ordered factor
summarize(
mean_salary = mean(E14_1),
se = sd(E14_1) / sqrt(n()),
lower_ci = mean_salary - 1.96 * se,
upper_ci = mean_salary + 1.96 * se,
.groups = "drop"  # Explicitly drop grouping
) %>%
mutate(salary_label = paste0(format(round(mean_salary), big.mark = ","), " AMD"))
ggplot(plot_data, aes(x = graduation_year_ordered, y = mean_salary,
color = B3, group = B3)) +
geom_pointrange(aes(ymin = lower_ci, ymax = upper_ci),
position = position_dodge(width = 0.5)) +
geom_line(position = position_dodge(width = 0.5)) +
geom_text(aes(y = upper_ci, label = salary_label),
position = position_dodge(width = 0.5),
vjust = -0.5, size = 3, color = "black") +
labs(title = "Mean Salary with 95% Confidence Intervals",
x = "Graduation Year", y = "Mean Salary (AMD)",
color = "Gender") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grad_year_gender_count <- decoded_data %>%
filter(!is.na(B8), !is.na(B3)) %>%
count(B8, B3, name = "count") %>%
arrange(correct_order)
grad_year_gender_count <- decoded_data %>%
filter(!is.na(B8), !is.na(B3)) %>%
count(B8, B3, name = "count")
print(grad_year_gender_count)
grad_year_gender_count <- decoded_data %>%
filter(!is.na(B8), !is.na(B3)) %>%
count(B8, B3, name = "count")
grad_year_summary <- decoded_data %>%
filter(!is.na(B8), !is.na(B3)) %>%
group_by(B8) %>%
count(B3, name = "count") %>%
mutate(
percent = count / sum(count) * 100,
percent_label = paste0(round(percent, 1), "%")
) %>%
arrange(B8)
knitr::kable(grad_year_summary, caption = "Graduation Year by Gender")
library(dplyr)
graduation_summary <- decoded_data %>%
filter(!is.na(B3), !is.na(B8)) %>%
count(Gender = B3, Graduation_Year = B8, name = "Count") %>%
group_by(Graduation_Year) %>%
mutate(Percentage = Count / sum(Count) * 100) %>%
ungroup() %>%
mutate(Percentage_Label = paste0(round(Percentage, 1), "%")) %>%
select(Gender, Graduation_Year, Count, Percentage, Percentage_Label) %>%
arrange(Graduation_Year, Gender)
print(graduation_summary)
